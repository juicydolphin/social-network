{"version":3,"file":"static/js/161.fa8671d1.chunk.js","mappings":"iOACA,EAA0B,yBAA1B,EAAqG,wB,4BCwCrG,EAvCsB,SAACA,GAEnB,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAKC,EAAL,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAASD,EAAMI,QAAzC,eAAKA,EAAL,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACND,EAAUL,EAAMI,UAClB,CAACJ,EAAMI,SAcT,OACQ,4BACOF,IACC,0BACI,kBAAMK,QAASP,EAAMQ,QAhBhB,WACrBL,GAAY,IAesD,KAAlD,WAAwD,iEAAxD,IAAwEH,EAAMI,YAGrFF,IACG,0BACI,kBAAOO,SAbJ,SAACC,GACpBL,EAAUK,EAAEC,cAAcC,QAYuBC,OAlB1B,WACvBV,GAAY,GACZH,EAAMc,aAAaV,IAiBIQ,MAAOR,EAAQW,WAAW,U,iDCdzD,GAF6BC,EAAAA,EAAAA,GAAU,CAACC,KAAM,eAAjBD,EAZL,SAAC,GAAoB,IAAnBE,EAAkB,EAAlBA,aACtB,OAAQ,kBAAMC,SAAUD,EAAhB,WACJ,0BACI,0FAEJ,0BAAK,SAACE,EAAA,EAAD,CAAOC,SAAU,CAACC,EAAAA,GAAWC,YAAa,8FAAoBC,KAAM,WAAYC,UAAWC,EAAAA,QAChG,4BAAK,qFAAkB,SAACN,EAAA,EAAD,CAAOC,SAAU,CAACC,EAAAA,GAAWE,KAAM,iBAAkBC,UAAWC,EAAAA,GAAOC,KAAM,aAApG,QACA,4BAAK,mKAA+B,SAACP,EAAA,EAAD,CAAOC,SAAU,CAACC,EAAAA,GAAWE,KAAM,4BAA6BC,UAAWG,EAAAA,KAA/G,QACA,4BAAK,mEAAe,SAACR,EAAA,EAAD,CAAOC,SAAU,CAACC,EAAAA,GAAWE,KAAM,UAAWC,UAAWG,EAAAA,cC2B/EC,EAAc,SAAC,GAA0C,IAAzCC,EAAwC,EAAxCA,QAAStB,EAA+B,EAA/BA,QAASuB,EAAsB,EAAtBA,iBACpC,OAAO,2BACFvB,IAAW,0BACR,mBAAQD,QAASwB,EAAjB,+FAEJ,0BAAK,wBAAKD,EAAQE,cAClB,4BAAK,oFAAL,IAAyBF,EAAQG,eAAiB,eAAO,yBACzD,4BAAK,kKAAL,IAAsCH,EAAQI,8BAC9C,4BAAK,kEAAL,IAAsBJ,EAAQK,eAOtC,EAhDoB,SAACnC,GAEjB,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAKC,EAAL,KAAeC,EAAf,KAGA,IAAKH,EAAM8B,QACP,OAAO,SAACM,EAAA,EAAD,IAWX,OACI,0BACI,iBAAKC,UAAWC,EAAhB,WAA+B,gBAC3BC,IAAKvC,EAAM8B,QAAQU,OAAOC,OAASC,IAClC1C,EAAMQ,UAAW,kBAAOmB,KAAM,OAAQlB,SAbvB,SAACC,GACrBA,EAAEiC,OAAOC,MAAMC,QACf7C,EAAM8C,UAAUpC,EAAEiC,OAAOC,MAAM,QAY3B,SAAC,EAAD,CAAepC,QAASR,EAAMQ,QAASM,aAAcd,EAAMc,aAAcV,OAAQJ,EAAMI,SACtFF,GAAW,SAAC,EAAD,CAAsB6C,cAAe/C,EAAM8B,QAASX,SAV3D,SAAC6B,GACfhD,EAAMiD,YAAYD,IAS2ElB,QAAS9B,EAAM8B,WAC7F,SAACD,EAAD,CAAaE,iBAAkB,WAC7B5B,GAAY,IACb2B,QAAS9B,EAAM8B,QAAStB,QAASR,EAAMQ,gB,UChC9D,EAA0B,yBCA1B,EAAuB,mBAAvB,EAAyF,uBCYzF,EAVa,SAACR,GAEV,OACI,gBAAKqC,UAAWC,EAAhB,UACI,iBAAMD,UAAWC,EAAjB,SAAmCtC,EAAMkD,aCmB/CC,GAAcC,EAAAA,EAAAA,GAAiB,IAU/BC,GAAgBrC,EAAAA,EAAAA,GAAU,CAC5BC,KAAM,WADYD,EATL,SAAChB,GACd,OACI,kBAAMmB,SAAUnB,EAAMkB,aAAtB,WACI,SAACE,EAAA,EAAD,CAAOK,UAAWG,EAAAA,GAAUJ,KAAM,cAAeH,SAAU,CAACC,EAAAA,EAAS6B,MACrE,6FASZ,EA/BgB,SAACnD,GAEb,IAAIsD,EAAgBtD,EAAMuD,MAAMC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAMP,QAASO,EAAEP,aAM1D,OACI,iBAAKb,UAAWC,EAAhB,+DAEI,SAACe,EAAD,CAAelC,SAPT,SAAC6B,GACZhD,EAAM0D,QAAQV,EAASW,gBAOjBL,M,UCAb,GAFyBM,EAAAA,EAAAA,KAdH,SAACC,GACnB,MAAO,CACHN,MAAOM,EAAMC,YAAYP,MACzBI,YAAaE,EAAMC,YAAYH,gBAId,SAACI,GAClB,MAAO,CACHL,QAAS,SAACC,GACNI,GAASC,EAAAA,EAAAA,IAAqBL,QAIrBC,CAA4CK,GCLrE,EAVgB,SAACjE,GACb,OACI,iBAAKqC,UAAWC,EAAhB,WACI,SAAC,EAAD,CAAaW,YAAajD,EAAMiD,YAAYH,UAAW9C,EAAM8C,UAAWtC,QAASR,EAAMQ,QAASsB,QAAS9B,EAAM8B,QAAS1B,OAAQJ,EAAMI,OAAQU,aAAcd,EAAMc,gBAClK,SAAC,EAAD,Q,8BCCNoD,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAiCD,OAjCCA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,iBAAAA,MACF,WACI,IAAIC,EAASC,KAAKpE,MAAMqE,OAAOC,OAAOH,OACjCA,IACDA,EAASC,KAAKpE,MAAMuE,kBAEnBJ,GACDC,KAAKpE,MAAMwE,QAAQC,KAAK,UAE5BL,KAAKpE,MAAM0E,eAAeP,GAC1BC,KAAKpE,MAAM2E,cAAcR,KAC5B,+BAED,WAEIC,KAAKQ,mBAER,gCAED,SAAmBC,EAAWC,EAAWC,GAClCX,KAAKpE,MAAMqE,OAAOC,OAAOH,SAAWU,EAAUR,OAAOC,OAAOH,QAC3DC,KAAKQ,mBAGZ,oBAED,WACI,OACI,0BACI,SAAC,GAAD,kBAAaR,KAAKpE,OAAlB,IAAyBQ,SAAU4D,KAAKpE,MAAMqE,OAAOC,OAAOH,OAAQrC,QAASsC,KAAKpE,MAAM8B,QAAS1B,OAAQgE,KAAKpE,MAAMI,OAC3GU,aAAcsD,KAAKpE,MAAMgF,iBAAkB/B,YAAamB,KAAKpE,MAAMiD,YAAaH,UAAWsB,KAAKpE,MAAM8C,mBAG1H,EAjCCoB,CAAyBe,EAAAA,WA8C/B,GAAeC,EAAAA,EAAAA,KACXtB,EAAAA,EAAAA,KAVkB,SAACC,GAAD,MAAY,CAC9B/B,QAAS+B,EAAMC,YAAYhC,QAC3ByC,iBAAkBV,EAAMsB,KAAKhB,OAC7B/D,OAAQyD,EAAMC,YAAY1D,OAC1BgF,OAAQvB,EAAMsB,KAAKC,UAMM,CAACV,eAAAA,EAAAA,GAAgBC,cAAAA,EAAAA,GAAeK,iBAAAA,EAAAA,GAAkBlC,UAAAA,EAAAA,GAAWG,YAAAA,EAAAA,KACtFoC,EAAAA,EACAC,EAAAA,EAHJ,CAIEpB,I,kNCxDIqB,EAAc,SAAC,GAAmC,EAAlCC,MAAmC,IAA5BC,EAA2B,EAA3BA,KAAgBzF,GAAW,EAArB0F,OAAqB,aAC9CC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACI,iBAAKxD,UAAWC,EAAAA,EAAAA,YAAqB,KAAOqD,EAAWrD,EAAAA,EAAAA,MAAe,IAAtE,WACI,yBACKtC,EAAM8F,WAEVH,IAAY,0BAAOF,EAAKI,YAMxBjE,EAAW,SAAC5B,GAErB,IAAOwF,EAAoCxF,EAApCwF,MAAuBO,GAAa/F,EAA7ByF,KAA6BzF,EAAvB0F,OAApB,OAA2C1F,EAA3C,IACA,OAAO,UAACuF,GAAD,kBAAiBvF,GAAjB,mBAAyB,uCAAcwF,GAAWO,SAGhDrE,EAAQ,SAAC1B,GAClB,IAAOwF,EAA0CxF,EAA1CwF,MAA6BO,GAAa/F,EAAnCyF,KAAmCzF,EAA7B0F,MAA6B1F,EAAvBY,OAA1B,OAAiDZ,EAAjD,IACA,OACI,UAACuF,GAAD,kBAAiBvF,GAAjB,mBAAyB,oCAAWwF,GAAWO,U,iJCrBnDC,EAAkB,SAACnC,GAAD,MAAY,CAC9BuB,OAAQvB,EAAMsB,KAAKC,SAGVE,EAAmB,SAACW,GAAe,IAEtCC,EAFqC,0IAGvC,WACI,OAA0B,IAAtB9B,KAAKpE,MAAMoF,QAAyB,SAAC,KAAD,CAAUe,GAAI,YAC/C,SAACF,GAAD,UAAe7B,KAAKpE,YALQ,GAEXiF,EAAAA,WAShC,OAFqCrB,EAAAA,EAAAA,IAAQoC,EAARpC,CAAyBsC,K,4ECjB3D,IAAM5E,EAAW,SAACV,GACrB,IAAIA,EACJ,MAAO,qGAIEwC,EAAmB,SAACgD,GAAD,OAAe,SAACxF,GAC5C,GAAIA,EAAMiC,OAASuD,EAAW,MAAM,2GAAN,OAA6BA,EAA7B,wD,mBCNlC,KAAgB,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB,yC,g0QCAxG,SAASC,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADL9D,GAAS,OAA6B2D,EAAQC,GAGlD,GAAIG,OAAOC,sBAAuB,CAChC,IAAIC,EAAmBF,OAAOC,sBAAsBL,GAEpD,IAAKG,EAAI,EAAGA,EAAIG,EAAiB/D,OAAQ4D,IACvCD,EAAMI,EAAiBH,GACnBF,EAASM,QAAQL,IAAQ,GACxBE,OAAOI,UAAUC,qBAAqBC,KAAKV,EAAQE,KACxD7D,EAAO6D,GAAOF,EAAOE,IAIzB,OAAO7D","sources":["webpack://social-network/./src/Components/Profile/Profile.module.css?f51d","Components/Profile/ProfileInfo/ProfileStatus.js","Components/Profile/ProfileInfo/ProfileDataForm.js","Components/Profile/ProfileInfo/ProfileInfo.js","webpack://social-network/./src/Components/Profile/MyPosts/MyPosts.module.css?bd90","webpack://social-network/./src/Components/Profile/MyPosts/Post/Post.module.css?54ab","Components/Profile/MyPosts/Post/Post.js","Components/Profile/MyPosts/MyPosts.js","Components/Profile/MyPosts/MyPostsContainer.js","Components/Profile/Profile.js","Components/Profile/ProfileContainer.js","Components/common/FormsControls/FormsControls.js","hoc/withAuthRedirect.js","utils/validators/validators.js","webpack://social-network/./src/Components/common/FormsControls/FormControls.module.css?ce09","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__eDp0N\",\"background\":\"Profile_background__2pny7\",\"avatar\":\"Profile_avatar__kZgZl\"};","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    },[props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n            <div>\r\n                { !editMode &&\r\n                    <div>\r\n                        <span onClick={props.isOwner ? activateEditMode : null}><b>Статус:</b> {props.status}</span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input onChange={onStatusChange} onBlur={deactivateEditMode}\r\n                               value={status} autoFocus={true}/>\r\n\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default ProfileStatus;","import {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\n\r\nconst ProfileDataForm = ({handleSubmit}) => {\r\n    return (<form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button>Сохранить</button>\r\n        </div>\r\n        <div><Field validate={[required]} placeholder={'Имя пользователя'} name={'fullName'} component={Input}/></div>\r\n        <div><b>Ищу работу:</b><Field validate={[required]} name={'lookingForAJob'} component={Input} type={'checkbox'} /> </div>\r\n        <div><b>Профессиональные навыки:</b><Field validate={[required]} name={'lookingForAJobDescription'} component={Textarea} /> </div>\r\n        <div><b>Обо мне:</b><Field validate={[required]} name={'aboutMe'} component={Textarea}/></div>\r\n    </form>)\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({form: 'profileForm'}) (ProfileDataForm)\r\n\r\nexport default ProfileDataReduxForm;","import React, {useState} from 'react';\r\nimport styles from \"../Profile.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport userPhoto from '../../../assets/images/noavatar.png'\r\nimport ProfileDataReduxForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n       props.saveProfile(formData)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.avatar}><img\r\n                src={props.profile.photos.large || userPhoto}/>\r\n                {props.isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\r\n                <ProfileStatus isOwner={props.isOwner} updateStatus={props.updateStatus} status={props.status}/>\r\n                {editMode ? <ProfileDataReduxForm initialValues={props.profile} onSubmit={onSubmit} profile={props.profile}/>\r\n                    : <ProfileData activateEditMode={() => {\r\n                        setEditMode(true)\r\n                    }} profile={props.profile} isOwner={props.isOwner}/>}\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst ProfileData = ({profile, isOwner, activateEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div>\r\n            <button onClick={activateEditMode}>Редактировать</button>\r\n        </div>}\r\n        <div><h3>{profile.fullName}</h3></div>\r\n        <div><b>Ищу работу:</b> {profile.lookingForAJob ? 'да' : 'нет'}</div>\r\n        <div><b>Профессиональные навыки:</b> {profile.lookingForAJobDescription}</div>\r\n        <div><b>Обо мне:</b> {profile.aboutMe}</div>\r\n    </div>\r\n\r\n}\r\n\r\n\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MyPosts_content__2qfx6\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__pLvwu\",\"postPhoto\":\"Post_postPhoto__Ph1ll\",\"postText\":\"Post_postText__KzLcD\"};","import React from 'react';\r\nimport styles from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={styles.item}>\r\n            <span className={styles.postText}>{props.message}</span>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport styles from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElements = props.posts.map(p => <Post message={p.message}/>)\r\n\r\n    let newPost = (formData) => {\r\n       props.addPost(formData.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.content}>\r\n            Мои посты\r\n            <PostReduxForm onSubmit={newPost}/>\r\n            {postsElements}\r\n        </div>\r\n\r\n    );\r\n};\r\nconst maxLength50 = maxLengthCreator(50)\r\nconst PostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name={'newPostText'} validate={[required,maxLength50]}/>\r\n            <button>Отправить</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst PostReduxForm = reduxForm({\r\n    form: 'newPost'\r\n})(PostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n        return {\r\n            addPost: (newPostText) => {\r\n                dispatch(addPostActionCreator(newPostText))\r\n            }\r\n        }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport styles from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={styles.profile}>\r\n            <ProfileInfo saveProfile={props.saveProfile}savePhoto={props.savePhoto} isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react'\r\nimport Profile from \"./Profile\";\r\nimport {getUserProfile, getUserStatus, savePhoto, saveProfile, updateUserStatus} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {withRouter} from \"../../hoc/withRouter\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userID = this.props.router.params.userID\r\n        if (!userID) {\r\n            userID = this.props.authorizedUserId\r\n        }\r\n        if (!userID) {\r\n            this.props.history.push('/login')\r\n        }\r\n        this.props.getUserProfile(userID)\r\n        this.props.getUserStatus(userID)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.refreshProfile()\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.router.params.userID !== prevProps.router.params.userID) {\r\n            this.refreshProfile()\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} isOwner={!this.props.router.params.userID} profile={this.props.profile} status={this.props.status}\r\n                         updateStatus={this.props.updateUserStatus} saveProfile={this.props.saveProfile} savePhoto={this.props.savePhoto}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    authorizedUserId: state.auth.userID,\r\n    status: state.profilePage.status,\r\n    isAuth: state.auth.isAuth\r\n\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer)","import styles from './FormControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}> <textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child,value, ...restProps} = props\r\n    return (\r\n        <FormControl {...props}> <input {...input} {...restProps} /></FormControl>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder,name,validators,component,props = {}, text='') => {\r\n   return (\r\n       <div>\r\n           <Field placeholder={placeholder} name={name}\r\n                  validate={validators} component={component}\r\n                  {...props}\r\n           /> {text}\r\n       </div>\r\n       )\r\n}","import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (this.props.isAuth === false) return <Navigate to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n\r\n}","export const required = (value) => {\r\n    if (value) return undefined\r\n    return 'Обязательное поле'\r\n\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Максимальная длина ${maxLength} символов`\r\n    return undefined\r\n\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormControls_formControl__fIDBD\",\"error\":\"FormControls_error__-ivHd\",\"formSummaryError\":\"FormControls_formSummaryError__iNptB\"};","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","isOwner","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","reduxForm","form","handleSubmit","onSubmit","Field","validate","required","placeholder","name","component","Input","type","Textarea","ProfileData","profile","activateEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Preloader","className","styles","src","photos","large","userPhoto","target","files","length","savePhoto","initialValues","formData","saveProfile","message","maxLength50","maxLengthCreator","PostReduxForm","postsElements","posts","map","p","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileContainer","userID","this","router","params","authorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","updateUserStatus","React","compose","auth","isAuth","withRouter","withAuthRedirect","FormControl","input","meta","child","hasError","touched","error","children","restProps","mapStateToProps","Component","RedirectComponent","to","maxLength","_objectWithoutProperties","source","excluded","key","i","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}